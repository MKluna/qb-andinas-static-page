---
import { Image } from "astro:assets";
import { FEATURES_TXT, SERVICES_TXT } from "../../../mock/public-txt";
import Container from "../../shared/Container.astro";
import Title from "../../shared/Title.astro";
import CardItemsService from "../../cards/CardItemsService.astro";



const IMPORTAR_ESTO_DESPUEST = {
    LOGISTICA_TXT:
        "Ofrecemos servicios de distribución y paquetería para una entrega eficiente y segura de productos. Optimizamos rutas y tiempos de entrega, asegurando la puntualidad y el estado óptimo de los envíos.",
    LUZ_TXT:
        "Especializados en tendido de líneas de media y baja tensión y gestión de nuevos suministros eléctricos. Cumplimos con normativas vigentes para garantizar infraestructuras seguras y eficientes.",
    GAS_TXT:
        "Servicios de gas que incluyen planos de obra y gestión de nuevos suministros para asegurar acceso rápido y eficiente. Soluciones efectivas para regularización de pagos y mantenimiento del servicio.",
    AGUA_TXT:
        "Ofrecemos un servicio especializado de lectura de medidores de agua para una gestión precisa y eficiente del consumo. Garantizamos registros exactos y contribuimos a una facturación precisa.",
};


import aguaImage from "../../../assets/servicios/agua.png";
import luzImage from "../../../assets/servicios/luz.png";
import gasImage from "../../../assets/servicios/gas.png";
import logisticaImage from "../../../assets/servicios/logistica.png";

import serviciosImage  from "../../../assets/servicios/servicios-img.webp";


const CARDS_DETAILS = [
    {url: aguaImage, text: [IMPORTAR_ESTO_DESPUEST.AGUA_TXT]},
    {url: luzImage, text: [IMPORTAR_ESTO_DESPUEST.LUZ_TXT]},
    {url: gasImage, text: [IMPORTAR_ESTO_DESPUEST.GAS_TXT]},
    {url: logisticaImage, text: [IMPORTAR_ESTO_DESPUEST.LOGISTICA_TXT]},
]

---

<section id="services">
    <div class="w-full relative py-8 md:py-10 px-6 md:px-8 rounded-2xl">
        <div class="relative">
            <div class="relative mb-2 mt-12">
                <div class="text-center max-w-3xl mx-auto mb-2">
                    <Title>Nuestros Servicios</Title>
                </div>
                <div
                    class="w-full relative py-8 md:py-10 px-6 md:px-8 rounded-2xl"
                >
                    <div
                        class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-12"
                    >
                        {
                            CARDS_DETAILS.map((service, index) => (
                                <CardItemsService
                                    url={service.url}
                                    alt={`cards-details-${index}`}
                                    text={service.text}
                                    key={index}
                                />
                            ))
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <Container>
        <div class="w-full relative py-8 md:py-10 px-6 md:px-8 rounded-2xl">
            <!-- <div class="absolute right-0 top-0 h-full w-full flex justify-end">
                <div
                    class="w-28 h-28 overflow-hidden flex rounded-xl relative blur-2xl"
                >
                    <span
                        class="absolute w-16 h-16 -top-1 -right-1 bg-green-500 rounded-md rotate-45"
                    ></span>
                    <span
                        class="absolute w-16 h-16 -bottom-1 -right-1 bg-[#FCDC58] rounded-md rotate-45"
                    ></span>
                    <span
                        class="absolute w-16 h-16 -bottom-1 -left-1 bg-primary rounded-md rotate-45"
                    ></span>
                </div>
            </div> -->
            <!-- <div class="absolute left-0 bottom-0 h-full w-full flex items-end">
                <div
                    class="w-28 h-28 overflow-hidden flex rounded-xl relative blur-2xl"
                >
                    <span
                        class="absolute w-16 h-16 -top-1 -right-1 bg-green-500 rounded-md rotate-45"
                    ></span>
                    <span
                        class="absolute w-16 h-16 -bottom-1 -right-1 bg-[#FCDC58] rounded-md rotate-45"
                    ></span>
                    <span
                        class="absolute w-16 h-16 -bottom-1 -left-1 bg-primary rounded-md rotate-45"
                    ></span>
                </div>
            </div> -->

            <div class="relative">
                <div class="relative mb-10">
                    <div class="text-center max-w-3xl mx-auto mb-6 lg:mb-12">
                        <Title>Venta de insumos</Title>
                    </div>
                    <div class="flex flex-col lg:flex-row gap-6 lg:gap-12 p-4 lg:p-12 rounded-lg mt-6 bg-gradient-to-tr from-gray-0 to-gray-100 bg-opacity-0">
                        <div class="lg:w-1/2 flex items-center">
                            <div class="flex flex-col items-center lg:max-w-3xl mx-auto lg:flex-1 lg:h-full justify-center">
                                <h2 class="text-lg lg:text-xl text-gray-900 dark:text-white text-center mb-4">
                                    {FEATURES_TXT.TITLE}
                                </h2>
                                <ul class="max-w-md space-y-1 text-gray-500 list-inside dark:text-gray-400">
                                    {FEATURES_TXT.ITEMS.map((itm, index) => (
                                        <li class="flex items-center text-base lg:text-lg text-gray-900 dark:text-white">
                                            <svg class="w-3.5 h-3.5 me-2 text-green-500 dark:text-green-400 flex-shrink-0" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z" />
                                            </svg>
                                            {itm}
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        </div>
                        <div class="lg:w-1/2 flex items-center">
                            <Image
                                class="object-cover rounded-lg mx-auto lg:max-w-none lg:ml-auto lg:mr-0 sm:w-full sm:h-auto animate-on-scroll-image"
                                src={serviciosImage}
                                alt="serviciosImageAlt"
                                widths={[240, 540, 720, serviciosImage.width]}
                                sizes={`(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1600px) 720px, ${serviciosImage.width}px`}
                                loading="eager"
                                format="avif"
                                quality={"mid"}
                            />
                        </div>
                    </div>
                </div>
            </div>
            
        </div>
    </Container>
</section>

<script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
        const observer = new IntersectionObserver((entries, observer) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    entry.target.classList.add(
                        "animate__animated",
                        "animate__fadeInUp",
                        "animate__slow",
                    );
                    observer.unobserve(entry.target);
                }
            });
        });

        document
            .querySelectorAll(".animate-on-scroll-service")
            .forEach((element, index) => {
                element.style.animationDelay = `${index * 0.1}s`;
                observer.observe(element);
            });
    });
</script>


<script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
        const observer = new IntersectionObserver((entries, observer) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    entry.target.classList.add(
                        "animate__animated",
                        "animate__fadeInRight",
                        "animate__slow",
                    );
                    observer.unobserve(entry.target);
                }
            });
        });

        document
            .querySelectorAll(".animate-on-scroll-image")
            .forEach((element, index) => {
                observer.observe(element);
            });
    });
</script>
